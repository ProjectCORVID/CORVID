#!/usr/bin/env coffee

app = require '../server/server'
process = require 'process'

[coffee, script, args...] = process.argv

query = {}

if args.length
  descriptor = args.shift()
  query =
    where: name: descriptor
    include: ['behavior', 'properties', 'subjectOf', 'definitionOf', 'objectOf']
  app.models.Referent.find query
    .then (found) ->
      for o in found
        o.behavior (err, behavior) ->
          o.properties (err, props) ->
            o.subjectOf (err, subjectOf) ->
              o.definitionOf (err, definitionOf) ->
                o.objectOf (err, objectOf) ->
                  #console.log "create #{o.name}"
                  #console.log "set #{o.name} #{p.name} '#{JSON.stringify p.value}'" for p in props
                  console.log o, behavior, props, subjectOf, definitionOf, objectOf
                  process.exit 0
    .catch (err) ->
      console.log "Error: ", err
      process.exit 1
else
  app.models.Referent.find()
    .then (found) ->
      for o in found
        console.log o.id, o.name
      process.exit 0
    .catch (e) ->
      console.log e
      process.exit 1
