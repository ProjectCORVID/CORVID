#!/usr/bin/env coffee

process = require 'process'
coffee = require 'coffee-script'

[execName, scriptName, args...] = process.argv

if args.length < 2
  console.log 'Must provide a referent and method name'
  process.exit 0

app = require '../server/server'

[refName, methName] = args

code = ""

process.stdin
  .on 'data', (d) ->
    code += d
    lines = code.split '\n'
    if (idx = lines.indexOf '.') > -1
      doProgram lines[0..idx].join '\n'
  .on 'end', ->
    doProgram code

doProgram = (code) ->
  fn = coffee.eval code
  app.models.Referent.findOrCreate name: refName
    .then (found) ->
      [referent, rest...] = found
      app.models.Behavior.findOrCreate {referentId: referent.id},
        referentId: referent.id
        package: methods: {}
    .then (found) ->
      [behavior, isNew] = found
      behavior.package.methods or= {}
      behavior.package.methods[methName] =
        code: code
        fn: fn
      behavior.save()
    .then (results) ->
      console.log "Success (#{results})"
      process.exit 0
    .catch (err) ->
      console.log "There was an error: ", err
      process.exit 1
